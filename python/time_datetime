time模块
    python中时间日期格式化符号：
    ● %y 两位数的年份表示（00-99）
    ● %Y 四位数的年份表示（000-9999）
    ● %m 月份（01-12）
    ● %d 月内中的一天（01-31）
    ● %H 24小时制小时数（00-23）
    ● %I 12小时制小时数（01-12）
    ● %M 分钟数（00=59）
    ● %S 秒（00-59）
    ● %a 本地简化星期名称
    ● %A 本地完整星期名称
    ● %b 本地简化的月份名称
    ● %B 本地完整的月份名称
    ● %c 本地相应的日期表示和时间表示
    ● %j 年内的一天（001-366）
    ● %p 本地A.M.或P.M.的等价符
    ● %U 一年中的星期数（00-53）星期天为星期的开始
    ● %w 星期（0-6），星期天为星期的开始
    ● %W 一年中的星期数（00-53）星期一为星期的开始
    ● %x 本地相应的日期表示
    ● %X 本地相应的时间表示
    ● %Z 当前时区的名称
    ● %% %号本身
    1.ticks = time.time()  时间戳
        输出结果: 1459994552.51
        时间戳单位最适于做日期运算。但是1970年之前的日期就无法以此表示了。太遥远的日期也不行，UNIX和Windows只支持到2038年。

    2.浮点时间转换成元组，只要将浮点数传递给如localtime之类的函数
        localtime = time.localtime(time.time())
        以上实例输出结果：
        本地时间为 : time.struct_time(tm_year=2016, tm_mon=4, tm_mday=7, tm_hour=10, tm_min=3, tm_sec=27, tm_wday=3, tm_yday=98, tm_isdst=0)
        tm_yday 一年中的第几天， tm_isdst 夏令时
        属性可以通过：localtime.tm_year  访问

    3.格式化时间：
        1.函数asctime(元组格式)
            localtime = time.asctime( time.localtime(time.time()))
            以上实例输出结果: Thu Apr  7 10:05:21 2016

        2.
            time.strftime(format[, t])     时间元组格式化成字符串
            time.strptime(t_str,format)    字符串格式化成时间元组
            time.mktime(时间元组)           制作时间戳

            例：
            # 格式化成2016-03-20 11:45:39形式
            print time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()) 

            # 格式化成Sat Mar 28 22:24:24 2016形式
            print time.strftime("%a %b %d %H:%M:%S %Y", time.localtime()) 
            
            # 将格式字符串转换为时间戳
            a = "Sat Mar 28 22:24:24 2016"
            print time.mktime(time.strptime(a,"%a %b %d %H:%M:%S %Y"))
            以上实例输出结果：
            2016-04-07 10:25:09
            Thu Apr 07 10:25:09 2016
            1459175064.0

日历模块calendar：
    calendar.weekday(year,month,day)给定日期返回星期
    其他参考官方文档